{"version":3,"sources":["components/pages/not-found-page/index.js","components/layout/page-container/index.js","utils/date.js","utils/examLogic.js","components/layout/autocomplete-input/index.js","components/layout/modal-form/index.js","components/layout/card/index.js","redux/exams/actions.js","redux/types.js","components/layout/menu-home/index.js","components/layout/filters/index.js","components/pages/home/index.js","components/pages/about/index.js","components/pages/subjects/index.js","components/layout/navbar/index.js","redux/theme/actions.js","routes/AppRouter.js","redux/theme/initial.js","redux/theme/reducer.js","redux/exams/initial.js","redux/exams/reducer.js","redux/rootReducer.js","redux/store.js","connectivity/localstorage.js","App.js","index.js"],"names":["NotFoundPage","Div","styled","div","props","background","connect","state","theme","children","pageColor","getDateForXDays","number","now","Date","setDate","getDate","formatNumber","getBackgroundCard","grade","dateParam","date","parseInt","getFilteredExams","exams","filters","length","filter","exam","status","getStatusExam","includes","getSortedExams","sortType","sort","a","b","subject","toLowerCase","allExams","value","handleChange","data","label","useState","display","setDisplay","inputValue","setInputValue","options","property","reduce","acc","getUniqueExamWithProperty","wrapperRef","useRef","useEffect","updateInputValue","window","addEventListener","handleClickOutside","removeEventListener","event","wrap","current","contains","target","Form","Group","ref","Label","FormControl","type","onClick","onChange","e","minLength","maxLength","required","ListGroup","option","indexOf","map","index","Item","key","tabIndex","onKeyPress","handleKeyPress","Control","Feedback","ModalForm","show","onHide","title","saveExam","deleteExam","examData","setExamData","validated","setValidated","dateError","setDateError","Modal","backdrop","size","centered","aria-labelledby","Alert","variant","className","Header","closeButton","Title","Body","noValidate","onSubmit","currentTarget","checkValidity","preventDefault","stopPropagation","isFormValid","Number","isInteger","getTime","teacher","unit","as","rows","tasks","selected","dateFormat","Button","id","defaultProps","uuidv4","dispatch","updateExam","payload","modalFormShow","setModalFormShow","Col","sm","lg","xl","Card","style","cursor","bg","Subtitle","Text","Footer","day","month","getMonth","year","getFullYear","formatDate","Array","fill","_","i","starNumber","addFilter","clearFilters","addExam","sortExams","ButtonGroup","DropdownButton","onSelect","Dropdown","eventKey","deleteFilter","failed","text","future","noResult","passed","fontSize","Container","Row","About","maxWidth","subjectsStat","subjectIndex","findIndex","res","obj","sum","amount","getSubjectsStatisitcs","localeCompare","width","toFixed","average","border","ProgressBar","animated","toogleTheme","Navbar","collapseOnSelect","expand","Check","Toggle","aria-controls","Collapse","Nav","to","AppRouter","exact","path","component","Home","Subjects","initialState","reducer","action","rootReducer","combineReducers","themeReducer","examsReducer","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","initialStateExams","initialStateTheme","store","createStore","composeWithDevTools","subscribe","throttle","stringify","setItem","console","log","saveState","getState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.843d436f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>Not Found</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  min-height: calc(100vh - 56px);\r\n  background: ${(props) => props.background};\r\n  transition: background 0.5s ease-in-out;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst PageContainer = ({ background, children }) => {\r\n  const pageColor = background === 'primary' ? '#F8F9FA' : '#282b2f';\r\n  return <Div background={pageColor}>{children}</Div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  background: state.theme.background,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PageContainer);\r\n","export const getDateForXDays = (number) => {\r\n  const now = new Date();\r\n  now.setDate(now.getDate() + number);\r\n  return now;\r\n};\r\n\r\nexport const formatDate = (dateParam) => {\r\n  const date = new Date(dateParam);\r\n  const day = formatNumber(date.getDate());\r\n  const month = formatNumber(date.getMonth() + 1);\r\n  const year = date.getFullYear();\r\n  return `${day}.${month}.${year}`;\r\n};\r\n\r\nconst formatNumber = (number) => (number < 10 ? '0' + number : number);\r\n","import { getDateForXDays } from './date';\r\n\r\nexport const getBackgroundCard = (grade, dateParam) => {\r\n  const date = new Date(dateParam);\r\n  if (grade && parseInt(grade, 10) === 1) {\r\n    return 'danger'; // fail\r\n  }\r\n  if (grade && parseInt(grade, 10) > 1) {\r\n    return 'success'; // pass\r\n  }\r\n  if (date >= new Date() && date < getDateForXDays(7)) {\r\n    return 'warning'; // in this 7 days\r\n  }\r\n  if (date < new Date() && grade === '') {\r\n    return 'secondary'; // written without grade\r\n  }\r\n  return 'info'; // future\r\n};\r\n\r\nexport const getStatusExam = (grade, dateParam) => {\r\n  const date = new Date(dateParam);\r\n  if (grade && parseInt(grade, 10) === 1) {\r\n    return 'failed';\r\n  }\r\n  if (grade && parseInt(grade, 10) > 1) {\r\n    return 'passed';\r\n  }\r\n  if (date < new Date()) {\r\n    return 'noResult';\r\n  }\r\n  return 'future';\r\n};\r\n\r\nexport const getFilteredExams = (exams, filters) => {\r\n  if (filters.length === 0) {\r\n    return exams;\r\n  }\r\n  const filteredExams = exams.filter((exam) => {\r\n    const { grade, date } = exam;\r\n    const status = getStatusExam(grade, date);\r\n    return filters.includes(status);\r\n  });\r\n  return filteredExams;\r\n};\r\n\r\nexport const getSortedExams = (exams, sortType) => {\r\n  switch (sortType) {\r\n    case 'date':\r\n      return exams.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n    case 'subject':\r\n      return exams.sort((a, b) => {\r\n        if (a.subject.toLowerCase() < b.subject.toLowerCase()) {\r\n          return -1;\r\n        }\r\n        if (a.subject.toLowerCase() > b.subject.toLowerCase()) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    default:\r\n      return exams;\r\n  }\r\n};\r\n\r\nexport const getSubjectsStatisitcs = (exams) =>\r\n  exams.reduce((acc, exam) => {\r\n    const grade = Number.isInteger(parseInt(exam.grade))\r\n      ? parseInt(exam.grade)\r\n      : -1;\r\n    const subjectIndex = acc.findIndex(\r\n      (res) => res.subject === exam.subject.toLowerCase()\r\n    );\r\n    if (subjectIndex === -1) {\r\n      const obj = {\r\n        subject: exam.subject.toLowerCase(),\r\n        sum: 0,\r\n        amount: 0,\r\n      };\r\n      if (grade > 0) {\r\n        obj.sum = grade;\r\n        obj.amount = 1;\r\n      }\r\n      return [...acc, obj];\r\n    } else {\r\n      if (grade > 0) {\r\n        acc[subjectIndex].sum += grade;\r\n        acc[subjectIndex].amount++;\r\n      }\r\n      return [...acc];\r\n    }\r\n  }, []);\r\n\r\nexport const getUniqueExamWithProperty = (exams, property) => {\r\n  return exams.reduce((acc, exam) => {\r\n    return acc.includes(exam[property]) ? acc : [...acc, exam[property]];\r\n  }, []);\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormControl, ListGroup, Form } from 'react-bootstrap';\r\nimport { getUniqueExamWithProperty } from '../../../utils/examLogic';\r\n\r\nconst AutocompleteInput = ({ value, handleChange, data, exams, label }) => {\r\n  const [display, setDisplay] = useState(false);\r\n  const [inputValue, setInputValue] = useState(value);\r\n  const options = getUniqueExamWithProperty(exams, data);\r\n  const wrapperRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    handleChange(inputValue);\r\n  }, [inputValue]);\r\n\r\n  const updateInputValue = (value) => {\r\n    setInputValue(value);\r\n    setDisplay(false);\r\n  };\r\n\r\n  const handleKeyPress = (e, value) => {\r\n    if (e.key === 'Enter') {\r\n      updateInputValue(value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      window.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  });\r\n\r\n  const handleClickOutside = (event) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form.Group ref={wrapperRef}>\r\n      <Form.Label>{label}</Form.Label>\r\n      <FormControl\r\n        type=\"text\"\r\n        onClick={() => setDisplay(!display)}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        value={value}\r\n        minLength=\"5\"\r\n        maxLength=\"50\"\r\n        required\r\n      />\r\n      {display && (\r\n        <ListGroup>\r\n          {options\r\n            .filter(\r\n              (option) =>\r\n                option.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\r\n            )\r\n            .map((value, index) => {\r\n              return (\r\n                <ListGroup.Item\r\n                  key={index}\r\n                  tabIndex={0}\r\n                  onClick={() => updateInputValue(value)}\r\n                  onKeyPress={(e) => handleKeyPress(e, value)}\r\n                >\r\n                  {value}\r\n                </ListGroup.Item>\r\n              );\r\n            })}\r\n        </ListGroup>\r\n      )}\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        Pole nie może być puste\r\n      </Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exams: state.exams.allExams,\r\n});\r\nexport default connect(mapStateToProps)(AutocompleteInput);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport AutocompleteInput from '../../layout/autocomplete-input';\r\n\r\nconst ModalForm = ({ show, onHide, title, exam, saveExam, deleteExam }) => {\r\n  const [examData, setExamData] = useState(exam);\r\n  const [validated, setValidated] = useState(false);\r\n  const [dateError, setDateError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setExamData({ ...exam });\r\n  }, [show, exam]);\r\n\r\n  const handleGrade = (e) => {\r\n    setExamData({ ...examData, grade: e.target.value });\r\n  };\r\n\r\n  const validateDateAndGrade = () => {\r\n    return !(\r\n      Number.isInteger(parseInt(examData.grade)) &&\r\n      new Date(examData.date).getTime() > new Date().getTime()\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      const isFormValid = validateDateAndGrade();\r\n      setDateError(!isFormValid);\r\n      if (isFormValid) {\r\n        saveExam(examData);\r\n        setExamData(exam);\r\n        setValidated(true);\r\n      }\r\n    }\r\n    setValidated(true);\r\n  };\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      backdrop=\"static\"\r\n      size=\"lg\"\r\n      centered\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n    >\r\n      {dateError && (\r\n        <Alert variant=\"danger\" className=\"my-3 mx-3\">\r\n          Nie możesz mieć oceny przed napisaniem <strong>sprawdzianu!</strong>\r\n        </Alert>\r\n      )}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <AutocompleteInput\r\n            value={examData.subject}\r\n            handleChange={(value) =>\r\n              setExamData({ ...examData, subject: value })\r\n            }\r\n            data={'subject'}\r\n            label=\"Przedmiot\"\r\n          />\r\n          <AutocompleteInput\r\n            value={examData.teacher}\r\n            handleChange={(value) =>\r\n              setExamData({ ...examData, teacher: value })\r\n            }\r\n            data={'teacher'}\r\n            label=\"Nauczyciel\"\r\n          />\r\n          <Form.Group>\r\n            <Form.Label>Dział</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              required\r\n              minLength=\"5\"\r\n              maxLength=\"50\"\r\n              value={examData.unit}\r\n              onChange={(e) =>\r\n                setExamData({ ...examData, unit: e.target.value })\r\n              }\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Pole powinno mieć 5 - 50 znaków\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Zagadnienia</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"2\"\r\n              required\r\n              minLength=\"15\"\r\n              maxLength=\"100\"\r\n              value={examData.tasks}\r\n              onChange={(e) =>\r\n                setExamData({ ...examData, tasks: e.target.value })\r\n              }\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Pole powinno mieć 15 - 100 znaków\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Ocena</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={handleGrade}\r\n              value={examData.grade}\r\n            >\r\n              <option value=\"\">Brak</option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"6\">6</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label className=\"mr-3\">Data</Form.Label>\r\n            <DatePicker\r\n              selected={examData.date}\r\n              onChange={(date) => setExamData({ ...examData, date })}\r\n              dateFormat=\"dd.MM.yyyy\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"d-flex justify-content-end\">\r\n            {deleteExam && (\r\n              <Button\r\n                variant=\"danger\"\r\n                className=\"mr-4\"\r\n                onClick={() => deleteExam(exam.id)}\r\n              >\r\n                Usuń\r\n              </Button>\r\n            )}\r\n            <Button variant=\"secondary\" className=\"mr-4\" onClick={onHide}>\r\n              Anuluj\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Zapisz\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalForm.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  exam: PropTypes.object.isRequired,\r\n  saveExam: PropTypes.func.isRequired,\r\n};\r\n\r\nModalForm.defaultProps = {\r\n  exam: {\r\n    id: uuidv4(),\r\n    teacher: '',\r\n    subject: '',\r\n    unit: '',\r\n    tasks: '',\r\n    grade: '',\r\n    date: new Date(),\r\n  },\r\n};\r\n\r\nexport default ModalForm;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Col } from 'react-bootstrap';\r\nimport { AiFillStar, AiOutlineStar } from 'react-icons/ai';\r\nimport { formatDate } from '../../../utils/date';\r\nimport { getBackgroundCard } from '../../../utils/examLogic';\r\nimport ModalForm from '../modal-form';\r\nimport { updateExam, deleteExam } from '../../../redux/exams/actions';\r\n\r\nconst ExamCard = ({ exam, updateExam, deleteExam }) => {\r\n  const [modalFormShow, setModalFormShow] = useState(false);\r\n\r\n  const { subject, unit, tasks, teacher, date, grade } = exam;\r\n\r\n  const saveExam = (exam) => {\r\n    updateExam(exam);\r\n    setModalFormShow(false);\r\n  };\r\n  const handleDelete = (id) => {\r\n    deleteExam(id);\r\n    setModalFormShow(false);\r\n  };\r\n  return (\r\n    <Col sm={6} lg={4} xl={3}>\r\n      <Card\r\n        className=\"mb-4 text-light shadow\"\r\n        onClick={() => setModalFormShow(true)}\r\n        style={{ cursor: 'pointer' }}\r\n        bg={getBackgroundCard(grade, date)}\r\n      >\r\n        <Card.Header>\r\n          <Card.Title className=\"text-capitalize\">{subject}</Card.Title>\r\n          <Card.Subtitle className=\"text-capitalize\">{teacher}</Card.Subtitle>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Text className=\"text-capitalize\">{unit}</Card.Text>\r\n          <small>{tasks}</small>\r\n        </Card.Body>\r\n        <Card.Footer className=\"d-flex justify-content-between\">\r\n          <small>{formatDate(date)}</small>\r\n          {grade && (\r\n            <div>\r\n              {new Array(6)\r\n                .fill(0)\r\n                .map((_, i) => i + 1)\r\n                .map((starNumber) =>\r\n                  starNumber <= grade ? (\r\n                    <AiFillStar key={starNumber} />\r\n                  ) : (\r\n                    <AiOutlineStar key={starNumber} />\r\n                  )\r\n                )}\r\n              <small className=\"ml-1\">({grade})</small>\r\n            </div>\r\n          )}\r\n        </Card.Footer>\r\n      </Card>\r\n      <ModalForm\r\n        show={modalFormShow}\r\n        onHide={() => setModalFormShow(false)}\r\n        title=\"Edytuj sprawdzian\"\r\n        saveExam={saveExam}\r\n        exam={{ ...exam, date: new Date(exam.date) }}\r\n        deleteExam={handleDelete}\r\n      />\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateExam: (exam) => dispatch(updateExam(exam)),\r\n    deleteExam: (id) => dispatch(deleteExam(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ExamCard);\r\n","import {\r\n  ADD_FILTER,\r\n  CLEAR_FILTERS,\r\n  DELETE_FILTER,\r\n  ADD_EXAM,\r\n  UPDATE_EXAM,\r\n  DELETE_EXAM,\r\n  SORT,\r\n} from '../types';\r\n\r\n// filters\r\n\r\nexport const addFilter = (filter) => ({ type: ADD_FILTER, payload: filter });\r\n\r\nexport const deleteFilter = (filter) => ({\r\n  type: DELETE_FILTER,\r\n  payload: filter,\r\n});\r\n\r\nexport const clearFilters = () => ({ type: CLEAR_FILTERS });\r\n\r\n// exams\r\n\r\nexport const addExam = (exam) => ({ type: ADD_EXAM, payload: exam });\r\n\r\nexport const updateExam = (exam) => ({ type: UPDATE_EXAM, payload: exam });\r\n\r\nexport const deleteExam = (id) => ({ type: DELETE_EXAM, payload: id });\r\n\r\n// sort\r\n\r\nexport const sortExams = (sortType) => ({ type: SORT, payload: sortType });\r\n","// theme\r\nexport const TOOGLE_THEME = 'TOOGLE_THEME';\r\n\r\n// exams\r\nexport const ADD_EXAM = 'ADD_EXAM';\r\nexport const UPDATE_EXAM = 'UPDATE_EXAM';\r\nexport const DELETE_EXAM = 'DELETE_EXAM';\r\n\r\n// filters\r\nexport const ADD_FILTER = 'ADD_FILTER';\r\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\r\nexport const DELETE_FILTER = 'DELETE_FILTER';\r\n\r\n//sort\r\nexport const SORT = 'SORT';\r\n","import React, { useState, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ButtonGroup, Button, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport {\r\n  addFilter,\r\n  clearFilters,\r\n  addExam,\r\n  sortExams,\r\n} from '../../../redux/exams/actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ModalForm from '../../layout/modal-form';\r\n\r\nconst MenuHome = ({ filters, addFilter, clearFilters, addExam, sortExams }) => {\r\n  const [modalFormShow, setModalFormShow] = useState(false);\r\n  const handleFilter = (filter) => {\r\n    if (filter === 'all') {\r\n      return clearFilters();\r\n    }\r\n    if (filters.indexOf(filter) === -1) {\r\n      return addFilter(filter);\r\n    }\r\n  };\r\n  const handleSort = (sortType) => {\r\n    sortExams(sortType);\r\n  };\r\n  const saveExam = (exam) => {\r\n    addExam(exam);\r\n    setModalFormShow(false);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <ButtonGroup className=\"mt-2 mb-4\">\r\n        <Button variant=\"success\" onClick={() => setModalFormShow(true)}>\r\n          Nowy sprawdzian\r\n        </Button>\r\n        <DropdownButton\r\n          variant=\"outline-success\"\r\n          as={ButtonGroup}\r\n          title=\"Filtruj\"\r\n          id=\"bg-nested-dropdown\"\r\n          onSelect={(e) => handleFilter(e)}\r\n        >\r\n          <Dropdown.Item eventKey=\"all\">Wszystko</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"future\">Przyszłe</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"noResult\">Nieocenione</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"failed\">Niezaliczone</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"passed\">Zaliczone</Dropdown.Item>\r\n        </DropdownButton>\r\n        <DropdownButton\r\n          variant=\"outline-success\"\r\n          as={ButtonGroup}\r\n          title=\"Sortuj\"\r\n          id=\"bg-nested-dropdown\"\r\n          onSelect={(e) => handleSort(e)}\r\n        >\r\n          <Dropdown.Item eventKey=\"date\">Data</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"subject\">Przedmiot</Dropdown.Item>\r\n        </DropdownButton>\r\n      </ButtonGroup>\r\n      <ModalForm\r\n        show={modalFormShow}\r\n        onHide={() => setModalFormShow(false)}\r\n        title=\"Dodaj sprawdzian\"\r\n        saveExam={saveExam}\r\n        exam={{\r\n          id: uuidv4(),\r\n          teacher: '',\r\n          subject: '',\r\n          unit: '',\r\n          tasks: '',\r\n          grade: '',\r\n          date: new Date(),\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ filters: state.exams.filters });\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addFilter: (filter) => dispatch(addFilter(filter)),\r\n    clearFilters: () => dispatch(clearFilters()),\r\n    addExam: (exam) => dispatch(addExam(exam)),\r\n    sortExams: (sortType) => dispatch(sortExams(sortType)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuHome);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { TiDelete } from 'react-icons/ti';\r\nimport { deleteFilter } from '../../../redux/exams/actions';\r\n\r\nconst Filters = ({ filters, deleteFilter }) => {\r\n  const status = {\r\n    failed: { text: 'Niezaliczone', background: 'danger' },\r\n    future: { text: 'Przyszłe', background: 'info' },\r\n    noResult: { text: 'Nieocenione', background: 'secondary' },\r\n    passed: { text: 'Zaliczone', background: 'success' },\r\n  };\r\n  if (filters.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"d-flex mb-4 flex-wrap\">\r\n      {filters.map((filter) => (\r\n        <div\r\n          className={`bg-${status[filter].background} text-light rounded-pill px-3 py-2 mb-2 mr-2 d-flex align-items-center justify-content-between`}\r\n          key={filter}\r\n        >\r\n          <p className=\"my-0 mr-1\">{status[filter].text}</p>\r\n          <div\r\n            className=\"d-flex align-items-center btn px-0 mx-0 text-light\"\r\n            style={{ fontSize: '1.5rem' }}\r\n            onClick={() => deleteFilter(filter)}\r\n          >\r\n            <TiDelete />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filters: state.exams.filters,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteFilter: (filter) => dispatch(deleteFilter(filter)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport PageContainer from '../../layout/page-container';\r\nimport ExamCard from '../../layout/card';\r\nimport MenuHome from '../../layout/menu-home';\r\nimport Filters from '../../layout/filters';\r\nimport { getFilteredExams, getSortedExams } from '../../../utils/examLogic';\r\n\r\nconst Home = ({ exams }) => {\r\n  return (\r\n    <PageContainer>\r\n      <Container>\r\n        <MenuHome />\r\n        <Filters />\r\n        {exams.length > 0 ? (\r\n          <Row>\r\n            {exams.map((exam) => (\r\n              <ExamCard exam={exam} key={exam.id} />\r\n            ))}\r\n          </Row>\r\n        ) : (\r\n          <h5 className=\"display-5 text-center text-primary\">\r\n            Brak sprawdzianów\r\n          </h5>\r\n        )}\r\n      </Container>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exams: [\r\n    ...getFilteredExams(\r\n      getSortedExams(state.exams.allExams, state.exams.sort),\r\n      state.exams.filters\r\n    ),\r\n  ],\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport PageContainer from '../../layout/page-container';\r\nconst About = () => {\r\n  const typesOfExamsCard = [\r\n    { text: 'Sprawdzian później niż za 7 dni', variant: 'info' },\r\n    { text: 'Sprawdzian w przeciągu najbliższych 7 dni', variant: 'warning' },\r\n    { text: 'Sprawdzian nieoceniony', variant: 'secondary' },\r\n    { text: 'Sprawdzian niezaliczony', variant: 'danger' },\r\n    { text: 'Sprawdzian zaliczony', variant: 'success' },\r\n  ];\r\n  return (\r\n    <PageContainer>\r\n      <Container className=\"d-flex flex-column align-items-center text-center\">\r\n        <h3 className=\"mt-3 mb-5 text-primary\">\r\n          Oznaczenia kolorów sprawdzianów\r\n        </h3>\r\n        <div style={{ maxWidth: '700px' }}>\r\n          {typesOfExamsCard.map((type, index) => (\r\n            <Card key={index} bg={type.variant} className=\"mb-3 text-light\">\r\n              <Card.Header>\r\n                <Card.Title className=\"my-1\">{type.text}</Card.Title>\r\n              </Card.Header>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PageContainer from '../../layout/page-container';\r\nimport { Container } from 'react-bootstrap';\r\nimport { getSubjectsStatisitcs } from '../../../utils/examLogic';\r\nimport { Card, ProgressBar } from 'react-bootstrap';\r\n\r\nconst Subjects = ({ exams }) => {\r\n  const subjectsStat = getSubjectsStatisitcs(exams).sort((a, b) =>\r\n    a.subject.toLowerCase().localeCompare(b.subject.toLowerCase())\r\n  );\r\n  return (\r\n    <PageContainer>\r\n      <Container className=\"d-flex flex-column align-items-center text-center\">\r\n        <h3 className=\"mt-3 mb-5 text-primary\">\r\n          Średnie ocen z poszczególnych przedmiotów\r\n        </h3>\r\n        <div style={{ width: '80vw', maxWidth: '600px' }}>\r\n          {subjectsStat.length > 0 ? (\r\n            subjectsStat.map(({ subject, sum, amount }) => {\r\n              const label = amount > 0 ? (sum / amount).toFixed(2) : '0';\r\n              const average = sum > 0 ? ((sum / amount) * 100) / 6 : 0;\r\n              return (\r\n                <Card key={subject} className=\"mb-4\" border=\"primary\">\r\n                  <Card.Body>\r\n                    <Card.Title className=\"text-capitalize\">\r\n                      {subject}\r\n                    </Card.Title>\r\n                    <ProgressBar\r\n                      now={average}\r\n                      label={label}\r\n                      variant=\"primary\"\r\n                      animated\r\n                    />\r\n                  </Card.Body>\r\n                </Card>\r\n              );\r\n            })\r\n          ) : (\r\n            <h5 className=\"display-5 text-center text-primary\">\r\n              Brak przedmiotów\r\n            </h5>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exams: state.exams.allExams,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Subjects);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navbar, Nav, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { toogleTheme } from '../../../redux/theme/actions';\r\n\r\nconst NavbarComponent = (props) => {\r\n  const { background } = props;\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"md\"\r\n      bg={background}\r\n      variant=\"dark\"\r\n      className=\"shadow\"\r\n    >\r\n      <Form>\r\n        <Form.Check\r\n          className={`bg-${background}`}\r\n          type=\"switch\"\r\n          id=\"custom-switch\"\r\n          label=\"\"\r\n          onClick={props.toogleTheme}\r\n        />\r\n      </Form>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Link className=\"mr-4 my-2 text-light\" to=\"/\">\r\n            Wszystko\r\n          </Link>\r\n          <Link className=\"mr-4 my-2 text-light\" to=\"/subjects\">\r\n            Przedmioty\r\n          </Link>\r\n          <Link className=\"mr-4 my-2 text-light\" to=\"/about\">\r\n            O stronie\r\n          </Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  background: state.theme.background,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toogleTheme: () => dispatch(toogleTheme()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarComponent);\r\n","import { TOOGLE_THEME } from '../types';\r\n\r\nexport const toogleTheme = () => ({\r\n  type: TOOGLE_THEME,\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport NotFoundPage from '../components/pages/not-found-page';\r\nimport Home from '../components/pages/home';\r\nimport About from '../components/pages/about';\r\nimport Subjects from '../components/pages/subjects';\r\nimport Navbar from '../components/layout/navbar';\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Fragment>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/subjects\" component={Subjects} />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","const initialState = {\r\n  background: 'primary',\r\n};\r\n\r\nexport default initialState;\r\n","import { TOOGLE_THEME } from '../types';\r\nimport initialState from './initial';\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOOGLE_THEME:\r\n      const background = state.background === 'primary' ? 'dark' : 'primary';\r\n      return {\r\n        ...state,\r\n        background,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { getDateForXDays } from '../../utils/date';\r\n\r\nconst initialState = {\r\n  filters: [],\r\n  sort: '',\r\n  allExams: [\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'matematyka',\r\n      unit: 'trygonometria',\r\n      tasks: 'Rozwiązywanie z trygonometrii',\r\n      teacher: 'Tomasz Matyski',\r\n      date: getDateForXDays(-15),\r\n      grade: '1',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'język polski',\r\n      unit: 'Pozytywizm',\r\n      tasks: 'Pozytywizm w Polsce - praca u podstaw i praca organiczna',\r\n      teacher: 'Małgorzata Stanisławska',\r\n      date: getDateForXDays(-12),\r\n      grade: '4',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'matematyka',\r\n      unit: 'równanie kwadratowe',\r\n      tasks: 'Obliczanie delty i wyznaczenie pierwiastków',\r\n      teacher: 'Tomasz Matyski',\r\n      date: getDateForXDays(-10),\r\n      grade: '2',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'język polski',\r\n      unit: 'Lalka',\r\n      tasks: 'Przebieg losów bohaterów Lalki Bolesława Prusa',\r\n      teacher: 'Małgorzata Stanisławska',\r\n      date: getDateForXDays(-6),\r\n      grade: '5',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'historia',\r\n      unit: 'królowie polski',\r\n      tasks: 'Królowie z dynastii Piastów i daty ich koronacji',\r\n      teacher: 'Halina Wielkopolska',\r\n      date: getDateForXDays(-5),\r\n      grade: '3',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'chemia',\r\n      unit: 'kwasy',\r\n      tasks: 'Reakcje i zastosowanie kwasów',\r\n      teacher: 'Karolina Głogowska',\r\n      date: getDateForXDays(-5),\r\n      grade: '1',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'matematyka',\r\n      unit: 'równanie kwadratowe',\r\n      tasks: 'Rysowanie funkcji kwadratowych w układzie współrzędnych',\r\n      teacher: 'Tomasz Matyski',\r\n      date: getDateForXDays(-3),\r\n      grade: '',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'historia',\r\n      unit: 'królowie polski',\r\n      tasks: 'Królowie z dynastii Jagiellonów i daty ich koronacji',\r\n      teacher: 'Halina Wielkopolska',\r\n      date: getDateForXDays(-1),\r\n      grade: '',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'matematyka',\r\n      unit: 'równanie kwadratowe',\r\n      tasks: 'Maksymalna wartość w przedziale',\r\n      teacher: 'Tomasz Matyski',\r\n      date: getDateForXDays(1),\r\n      grade: '',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'historia',\r\n      unit: 'królowie polski',\r\n      tasks: 'Jan III Sobieski i bitwa pod Wiedniem',\r\n      teacher: 'Halina Wielkopolska',\r\n      date: getDateForXDays(5),\r\n      grade: '',\r\n    },\r\n\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'biologia',\r\n      unit: 'anatomia',\r\n      tasks: 'Budowa serca i działanie układu krążenia',\r\n      teacher: 'Maria Kałuża',\r\n      date: getDateForXDays(15),\r\n      grade: '',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      subject: 'angielski',\r\n      unit: 'Miejsce zamieszkania',\r\n      tasks: 'Opis domu i miasta rodzinnego',\r\n      teacher: 'Damian Tomilik',\r\n      date: getDateForXDays(5),\r\n      grade: '',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default initialState;\r\n","import {\r\n  ADD_FILTER,\r\n  CLEAR_FILTERS,\r\n  DELETE_FILTER,\r\n  ADD_EXAM,\r\n  UPDATE_EXAM,\r\n  DELETE_EXAM,\r\n  SORT,\r\n} from '../types';\r\nimport initialState from './initial';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_FILTER:\r\n      return {\r\n        ...state,\r\n        filters: [...state.filters, action.payload],\r\n      };\r\n    case CLEAR_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: [],\r\n      };\r\n    case DELETE_FILTER:\r\n      return {\r\n        ...state,\r\n        filters: state.filters.filter((filter) => filter !== action.payload),\r\n      };\r\n    case ADD_EXAM:\r\n      return {\r\n        ...state,\r\n        allExams: [action.payload, ...state.allExams],\r\n      };\r\n    case UPDATE_EXAM:\r\n      return {\r\n        ...state,\r\n        allExams: state.allExams.map((exam) =>\r\n          exam.id === action.payload.id ? action.payload : exam\r\n        ),\r\n      };\r\n    case DELETE_EXAM:\r\n      return {\r\n        ...state,\r\n        allExams: state.allExams.filter(({ id }) => id !== action.payload),\r\n      };\r\n    case SORT:\r\n      return {\r\n        ...state,\r\n        sort: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport themeReducer from './theme/reducer';\r\nimport examsReducer from './exams/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  theme: themeReducer,\r\n  exams: examsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport _ from 'lodash';\r\nimport { saveState, loadState } from '../connectivity/localstorage';\r\nimport initialStateExams from './exams/initial';\r\nimport initialStateTheme from './theme/initial';\r\n\r\nconst persistedState = loadState() || {\r\n  exams: initialStateExams,\r\n  theme: initialStateTheme,\r\n};\r\n\r\nconst store = createStore(rootReducer, persistedState, composeWithDevTools());\r\n\r\nstore.subscribe(\r\n  _.throttle(() => {\r\n    saveState(store.getState());\r\n  })\r\n);\r\n\r\nexport default store;\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React from 'react';\nimport 'normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AppRouter from './routes/AppRouter';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}